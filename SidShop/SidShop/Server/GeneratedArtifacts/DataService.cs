//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// 提供要在 inikierpData 資料來源中查詢及更新資料的成員。
    /// </summary>
    public sealed partial class inikierpDataService
        : global::LightSwitchApplication.inikierpData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public inikierpDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// 取得這個應用程式的 Application 物件。Application 物件提供對現用螢幕的存取、開啟螢幕的方法，以及對目前使用者的存取。
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// 取得包含資料工作區。資料工作區提供對應用程式中所有資料來源的存取。
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void cuskindcode_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void cuskindcode_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void cuskindcode_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void cuskindcode_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void cuskindcode_Inserting(global::LightSwitchApplication.cuskindcodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void cuskindcode_Inserted(global::LightSwitchApplication.cuskindcodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void cuskindcode_Updating(global::LightSwitchApplication.cuskindcodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void cuskindcode_Updated(global::LightSwitchApplication.cuskindcodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void cuskindcode_Deleting(global::LightSwitchApplication.cuskindcodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void cuskindcode_Deleted(global::LightSwitchApplication.cuskindcodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void cuskindcode_Validate(global::LightSwitchApplication.cuskindcodeItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void cuskindcode_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.cuskindcodeItem, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void customercode_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void customercode_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void customercode_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void customercode_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void customercode_Inserting(global::LightSwitchApplication.customercodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void customercode_Inserted(global::LightSwitchApplication.customercodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void customercode_Updating(global::LightSwitchApplication.customercodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void customercode_Updated(global::LightSwitchApplication.customercodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void customercode_Deleting(global::LightSwitchApplication.customercodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void customercode_Deleted(global::LightSwitchApplication.customercodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void customercode_Validate(global::LightSwitchApplication.customercodeItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void customercode_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.customercodeItem, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sendrecord_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sendrecord_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sendrecord_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sendrecord_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sendrecord_Inserting(global::LightSwitchApplication.sendrecordItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sendrecord_Inserted(global::LightSwitchApplication.sendrecordItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sendrecord_Updating(global::LightSwitchApplication.sendrecordItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sendrecord_Updated(global::LightSwitchApplication.sendrecordItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sendrecord_Deleting(global::LightSwitchApplication.sendrecordItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sendrecord_Deleted(global::LightSwitchApplication.sendrecordItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sendrecord_Validate(global::LightSwitchApplication.sendrecordItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sendrecord_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sendrecordItem, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void eorder_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void eorder_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void eorder_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void eorder_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void eorder_Inserting(global::LightSwitchApplication.eorderItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void eorder_Inserted(global::LightSwitchApplication.eorderItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void eorder_Updating(global::LightSwitchApplication.eorderItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void eorder_Updated(global::LightSwitchApplication.eorderItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void eorder_Deleting(global::LightSwitchApplication.eorderItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void eorder_Deleted(global::LightSwitchApplication.eorderItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void eorder_Validate(global::LightSwitchApplication.eorderItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void eorder_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.eorderItem, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sendtype_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sendtype_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sendtype_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sendtype_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sendtype_Inserting(global::LightSwitchApplication.sendtypeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sendtype_Inserted(global::LightSwitchApplication.sendtypeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sendtype_Updating(global::LightSwitchApplication.sendtypeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sendtype_Updated(global::LightSwitchApplication.sendtypeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sendtype_Deleting(global::LightSwitchApplication.sendtypeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sendtype_Deleted(global::LightSwitchApplication.sendtypeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sendtype_Validate(global::LightSwitchApplication.sendtypeItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sendtype_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sendtypeItem, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void eorderitem_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void eorderitem_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void eorderitem_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void eorderitem_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void eorderitem_Inserting(global::LightSwitchApplication.eorderitemItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void eorderitem_Inserted(global::LightSwitchApplication.eorderitemItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void eorderitem_Updating(global::LightSwitchApplication.eorderitemItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void eorderitem_Updated(global::LightSwitchApplication.eorderitemItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void eorderitem_Deleting(global::LightSwitchApplication.eorderitemItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void eorderitem_Deleted(global::LightSwitchApplication.eorderitemItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void eorderitem_Validate(global::LightSwitchApplication.eorderitemItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void eorderitem_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.eorderitemItem, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void eorderstatuscode_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void eorderstatuscode_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void eorderstatuscode_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void eorderstatuscode_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void eorderstatuscode_Inserting(global::LightSwitchApplication.eorderstatuscodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void eorderstatuscode_Inserted(global::LightSwitchApplication.eorderstatuscodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void eorderstatuscode_Updating(global::LightSwitchApplication.eorderstatuscodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void eorderstatuscode_Updated(global::LightSwitchApplication.eorderstatuscodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void eorderstatuscode_Deleting(global::LightSwitchApplication.eorderstatuscodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void eorderstatuscode_Deleted(global::LightSwitchApplication.eorderstatuscodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void eorderstatuscode_Validate(global::LightSwitchApplication.eorderstatuscodeItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void eorderstatuscode_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.eorderstatuscodeItem, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void productclass_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void productclass_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void productclass_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void productclass_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void productclass_Inserting(global::LightSwitchApplication.productclassItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void productclass_Inserted(global::LightSwitchApplication.productclassItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void productclass_Updating(global::LightSwitchApplication.productclassItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void productclass_Updated(global::LightSwitchApplication.productclassItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void productclass_Deleting(global::LightSwitchApplication.productclassItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void productclass_Deleted(global::LightSwitchApplication.productclassItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void productclass_Validate(global::LightSwitchApplication.productclassItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void productclass_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.productclassItem, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void productcode_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void productcode_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void productcode_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void productcode_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void productcode_Inserting(global::LightSwitchApplication.productcodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void productcode_Inserted(global::LightSwitchApplication.productcodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void productcode_Updating(global::LightSwitchApplication.productcodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void productcode_Updated(global::LightSwitchApplication.productcodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void productcode_Deleting(global::LightSwitchApplication.productcodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void productcode_Deleted(global::LightSwitchApplication.productcodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void productcode_Validate(global::LightSwitchApplication.productcodeItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void productcode_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.productcodeItem, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void employeecode_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void employeecode_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void employeecode_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void employeecode_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void employeecode_Inserting(global::LightSwitchApplication.employeecodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void employeecode_Inserted(global::LightSwitchApplication.employeecodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void employeecode_Updating(global::LightSwitchApplication.employeecodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void employeecode_Updated(global::LightSwitchApplication.employeecodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void employeecode_Deleting(global::LightSwitchApplication.employeecodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void employeecode_Deleted(global::LightSwitchApplication.employeecodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void employeecode_Validate(global::LightSwitchApplication.employeecodeItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void employeecode_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.employeecodeItem, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void invtitlecode_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void invtitlecode_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void invtitlecode_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void invtitlecode_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void invtitlecode_Inserting(global::LightSwitchApplication.invtitlecodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void invtitlecode_Inserted(global::LightSwitchApplication.invtitlecodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void invtitlecode_Updating(global::LightSwitchApplication.invtitlecodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void invtitlecode_Updated(global::LightSwitchApplication.invtitlecodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void invtitlecode_Deleting(global::LightSwitchApplication.invtitlecodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void invtitlecode_Deleted(global::LightSwitchApplication.invtitlecodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void invtitlecode_Validate(global::LightSwitchApplication.invtitlecodeItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void invtitlecode_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.invtitlecodeItem, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void unitcode_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void unitcode_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void unitcode_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void unitcode_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void unitcode_Inserting(global::LightSwitchApplication.unitcodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void unitcode_Inserted(global::LightSwitchApplication.unitcodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void unitcode_Updating(global::LightSwitchApplication.unitcodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void unitcode_Updated(global::LightSwitchApplication.unitcodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void unitcode_Deleting(global::LightSwitchApplication.unitcodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void unitcode_Deleted(global::LightSwitchApplication.unitcodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void unitcode_Validate(global::LightSwitchApplication.unitcodeItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void unitcode_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.unitcodeItem, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void punitcode_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void punitcode_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void punitcode_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void punitcode_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void punitcode_Inserting(global::LightSwitchApplication.punitcodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void punitcode_Inserted(global::LightSwitchApplication.punitcodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void punitcode_Updating(global::LightSwitchApplication.punitcodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void punitcode_Updated(global::LightSwitchApplication.punitcodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void punitcode_Deleting(global::LightSwitchApplication.punitcodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void punitcode_Deleted(global::LightSwitchApplication.punitcodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void punitcode_Validate(global::LightSwitchApplication.punitcodeItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void punitcode_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.punitcodeItem, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void suppliercode_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void suppliercode_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void suppliercode_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void suppliercode_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void suppliercode_Inserting(global::LightSwitchApplication.suppliercodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void suppliercode_Inserted(global::LightSwitchApplication.suppliercodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void suppliercode_Updating(global::LightSwitchApplication.suppliercodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void suppliercode_Updated(global::LightSwitchApplication.suppliercodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void suppliercode_Deleting(global::LightSwitchApplication.suppliercodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void suppliercode_Deleted(global::LightSwitchApplication.suppliercodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void suppliercode_Validate(global::LightSwitchApplication.suppliercodeItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void suppliercode_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.suppliercodeItem, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void paywaycode_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void paywaycode_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void paywaycode_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void paywaycode_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void paywaycode_Inserting(global::LightSwitchApplication.paywaycodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void paywaycode_Inserted(global::LightSwitchApplication.paywaycodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void paywaycode_Updating(global::LightSwitchApplication.paywaycodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void paywaycode_Updated(global::LightSwitchApplication.paywaycodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void paywaycode_Deleting(global::LightSwitchApplication.paywaycodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void paywaycode_Deleted(global::LightSwitchApplication.paywaycodeItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void paywaycode_Validate(global::LightSwitchApplication.paywaycodeItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void paywaycode_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.paywaycodeItem, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CustomerQuery_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void CustomerQuery_Executing(string companyName, string contactName, string simpleComany, global::System.Nullable<short> cusKind);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CustomerQuery_PreprocessQuery(string companyName, string contactName, string simpleComany, global::System.Nullable<short> cusKind, ref global::System.Linq.IQueryable<global::LightSwitchApplication.customercodeItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void CustomerQuery_Executed(string companyName, string contactName, string simpleComany, global::System.Nullable<short> cusKind, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.customercodeItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void CustomerQuery_ExecuteFailed(string companyName, string contactName, string simpleComany, global::System.Nullable<short> cusKind, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SendRecordQuery_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SendRecordQuery_Executing(string sendTypeName, global::System.Nullable<global::System.DateTime> sendDate);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SendRecordQuery_PreprocessQuery(string sendTypeName, global::System.Nullable<global::System.DateTime> sendDate, ref global::System.Linq.IQueryable<global::LightSwitchApplication.sendrecordItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SendRecordQuery_Executed(string sendTypeName, global::System.Nullable<global::System.DateTime> sendDate, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sendrecordItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SendRecordQuery_ExecuteFailed(string sendTypeName, global::System.Nullable<global::System.DateTime> sendDate, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EorderQuery_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void EorderQuery_Executing(string companyName, string orderNo, global::System.Nullable<global::System.DateTime> eoDate, global::System.Nullable<global::System.DateTime> eoDate1, string storeNumber);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EorderQuery_PreprocessQuery(string companyName, string orderNo, global::System.Nullable<global::System.DateTime> eoDate, global::System.Nullable<global::System.DateTime> eoDate1, string storeNumber, ref global::System.Linq.IQueryable<global::LightSwitchApplication.eorderItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void EorderQuery_Executed(string companyName, string orderNo, global::System.Nullable<global::System.DateTime> eoDate, global::System.Nullable<global::System.DateTime> eoDate1, string storeNumber, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.eorderItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void EorderQuery_ExecuteFailed(string companyName, string orderNo, global::System.Nullable<global::System.DateTime> eoDate, global::System.Nullable<global::System.DateTime> eoDate1, string storeNumber, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SendRecordForEorder_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SendRecordForEorder_Executing(global::System.Nullable<long> odID);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SendRecordForEorder_PreprocessQuery(global::System.Nullable<long> odID, ref global::System.Linq.IQueryable<global::LightSwitchApplication.sendrecordItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SendRecordForEorder_Executed(global::System.Nullable<long> odID, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sendrecordItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SendRecordForEorder_ExecuteFailed(global::System.Nullable<long> odID, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void invtitlecodeForEorder_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void invtitlecodeForEorder_Executing(global::System.Nullable<long> cusID, global::System.Nullable<int> invTitleCode);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void invtitlecodeForEorder_PreprocessQuery(global::System.Nullable<long> cusID, global::System.Nullable<int> invTitleCode, ref global::System.Linq.IQueryable<global::LightSwitchApplication.invtitlecodeItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void invtitlecodeForEorder_Executed(global::System.Nullable<long> cusID, global::System.Nullable<int> invTitleCode, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.invtitlecodeItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void invtitlecodeForEorder_ExecuteFailed(global::System.Nullable<long> cusID, global::System.Nullable<int> invTitleCode, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCodeQuery_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ProductCodeQuery_Executing(string prodDesc, string prodSeq, string pStorageSpaces);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCodeQuery_PreprocessQuery(string prodDesc, string prodSeq, string pStorageSpaces, ref global::System.Linq.IQueryable<global::LightSwitchApplication.productcodeItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ProductCodeQuery_Executed(string prodDesc, string prodSeq, string pStorageSpaces, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.productcodeItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ProductCodeQuery_ExecuteFailed(string prodDesc, string prodSeq, string pStorageSpaces, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierCodeQuery_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SupplierCodeQuery_Executing(string supName, string supTax);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierCodeQuery_PreprocessQuery(string supName, string supTax, ref global::System.Linq.IQueryable<global::LightSwitchApplication.suppliercodeItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SupplierCodeQuery_Executed(string supName, string supTax, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.suppliercodeItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SupplierCodeQuery_ExecuteFailed(string supName, string supTax, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.inikierpDataService, global::LightSwitchApplication.cuskindcodeItem>
                __cuskindcodeEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.inikierpDataService, global::LightSwitchApplication.cuskindcodeItem>(
                    "cuskindcode",
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__cuskindcode_CanInsert,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__cuskindcode_CanUpdate,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__cuskindcode_CanDelete,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__cuskindcode_CanRead,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__cuskindcode_Inserting,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__cuskindcode_Inserted,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__cuskindcode_Updating,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__cuskindcode_Updated,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__cuskindcode_Deleting,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__cuskindcode_Deleted,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__cuskindcode_Validate,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__cuskindcode_Filter);
            private static bool __cuskindcode_CanInsert(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.cuskindcode_CanInsert(ref result);
                return result;
            }
            private static bool __cuskindcode_CanUpdate(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.cuskindcode_CanUpdate(ref result);
                return result;
            }
            private static bool __cuskindcode_CanDelete(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.cuskindcode_CanDelete(ref result);
                return result;
            }
            private static bool __cuskindcode_CanRead(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.cuskindcode_CanRead(ref result);
                return result;
            }
            private static void __cuskindcode_Inserting(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.cuskindcodeItem e)
            {
                d.cuskindcode_Inserting(e);
            }
            private static void __cuskindcode_Inserted(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.cuskindcodeItem e)
            {
                d.cuskindcode_Inserted(e);
            }
            private static void __cuskindcode_Updating(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.cuskindcodeItem e)
            {
                d.cuskindcode_Updating(e);
            }
            private static void __cuskindcode_Updated(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.cuskindcodeItem e)
            {
                d.cuskindcode_Updated(e);
            }
            private static void __cuskindcode_Deleting(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.cuskindcodeItem e)
            {
                d.cuskindcode_Deleting(e);
            }
            private static void __cuskindcode_Deleted(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.cuskindcodeItem e)
            {
                d.cuskindcode_Deleted(e);
            }
            private static void __cuskindcode_Validate(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.cuskindcodeItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.cuskindcode_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.cuskindcodeItem, bool>> __cuskindcode_Filter(global::LightSwitchApplication.inikierpDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.cuskindcodeItem, bool>> filter = null;
                d.cuskindcode_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.inikierpDataService, global::LightSwitchApplication.customercodeItem>
                __customercodeEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.inikierpDataService, global::LightSwitchApplication.customercodeItem>(
                    "customercode",
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__customercode_CanInsert,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__customercode_CanUpdate,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__customercode_CanDelete,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__customercode_CanRead,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__customercode_Inserting,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__customercode_Inserted,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__customercode_Updating,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__customercode_Updated,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__customercode_Deleting,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__customercode_Deleted,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__customercode_Validate,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__customercode_Filter);
            private static bool __customercode_CanInsert(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.customercode_CanInsert(ref result);
                return result;
            }
            private static bool __customercode_CanUpdate(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.customercode_CanUpdate(ref result);
                return result;
            }
            private static bool __customercode_CanDelete(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.customercode_CanDelete(ref result);
                return result;
            }
            private static bool __customercode_CanRead(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.customercode_CanRead(ref result);
                return result;
            }
            private static void __customercode_Inserting(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.customercodeItem e)
            {
                d.customercode_Inserting(e);
            }
            private static void __customercode_Inserted(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.customercodeItem e)
            {
                d.customercode_Inserted(e);
            }
            private static void __customercode_Updating(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.customercodeItem e)
            {
                d.customercode_Updating(e);
            }
            private static void __customercode_Updated(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.customercodeItem e)
            {
                d.customercode_Updated(e);
            }
            private static void __customercode_Deleting(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.customercodeItem e)
            {
                d.customercode_Deleting(e);
            }
            private static void __customercode_Deleted(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.customercodeItem e)
            {
                d.customercode_Deleted(e);
            }
            private static void __customercode_Validate(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.customercodeItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.customercode_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.customercodeItem, bool>> __customercode_Filter(global::LightSwitchApplication.inikierpDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.customercodeItem, bool>> filter = null;
                d.customercode_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.inikierpDataService, global::LightSwitchApplication.sendrecordItem>
                __sendrecordEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.inikierpDataService, global::LightSwitchApplication.sendrecordItem>(
                    "sendrecord",
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__sendrecord_CanInsert,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__sendrecord_CanUpdate,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__sendrecord_CanDelete,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__sendrecord_CanRead,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__sendrecord_Inserting,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__sendrecord_Inserted,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__sendrecord_Updating,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__sendrecord_Updated,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__sendrecord_Deleting,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__sendrecord_Deleted,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__sendrecord_Validate,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__sendrecord_Filter);
            private static bool __sendrecord_CanInsert(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.sendrecord_CanInsert(ref result);
                return result;
            }
            private static bool __sendrecord_CanUpdate(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.sendrecord_CanUpdate(ref result);
                return result;
            }
            private static bool __sendrecord_CanDelete(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.sendrecord_CanDelete(ref result);
                return result;
            }
            private static bool __sendrecord_CanRead(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.sendrecord_CanRead(ref result);
                return result;
            }
            private static void __sendrecord_Inserting(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.sendrecordItem e)
            {
                d.sendrecord_Inserting(e);
            }
            private static void __sendrecord_Inserted(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.sendrecordItem e)
            {
                d.sendrecord_Inserted(e);
            }
            private static void __sendrecord_Updating(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.sendrecordItem e)
            {
                d.sendrecord_Updating(e);
            }
            private static void __sendrecord_Updated(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.sendrecordItem e)
            {
                d.sendrecord_Updated(e);
            }
            private static void __sendrecord_Deleting(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.sendrecordItem e)
            {
                d.sendrecord_Deleting(e);
            }
            private static void __sendrecord_Deleted(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.sendrecordItem e)
            {
                d.sendrecord_Deleted(e);
            }
            private static void __sendrecord_Validate(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.sendrecordItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sendrecord_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sendrecordItem, bool>> __sendrecord_Filter(global::LightSwitchApplication.inikierpDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sendrecordItem, bool>> filter = null;
                d.sendrecord_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.inikierpDataService, global::LightSwitchApplication.eorderItem>
                __eorderEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.inikierpDataService, global::LightSwitchApplication.eorderItem>(
                    "eorder",
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__eorder_CanInsert,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__eorder_CanUpdate,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__eorder_CanDelete,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__eorder_CanRead,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__eorder_Inserting,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__eorder_Inserted,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__eorder_Updating,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__eorder_Updated,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__eorder_Deleting,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__eorder_Deleted,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__eorder_Validate,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__eorder_Filter);
            private static bool __eorder_CanInsert(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.eorder_CanInsert(ref result);
                return result;
            }
            private static bool __eorder_CanUpdate(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.eorder_CanUpdate(ref result);
                return result;
            }
            private static bool __eorder_CanDelete(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.eorder_CanDelete(ref result);
                return result;
            }
            private static bool __eorder_CanRead(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.eorder_CanRead(ref result);
                return result;
            }
            private static void __eorder_Inserting(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.eorderItem e)
            {
                d.eorder_Inserting(e);
            }
            private static void __eorder_Inserted(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.eorderItem e)
            {
                d.eorder_Inserted(e);
            }
            private static void __eorder_Updating(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.eorderItem e)
            {
                d.eorder_Updating(e);
            }
            private static void __eorder_Updated(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.eorderItem e)
            {
                d.eorder_Updated(e);
            }
            private static void __eorder_Deleting(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.eorderItem e)
            {
                d.eorder_Deleting(e);
            }
            private static void __eorder_Deleted(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.eorderItem e)
            {
                d.eorder_Deleted(e);
            }
            private static void __eorder_Validate(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.eorderItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.eorder_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.eorderItem, bool>> __eorder_Filter(global::LightSwitchApplication.inikierpDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.eorderItem, bool>> filter = null;
                d.eorder_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.inikierpDataService, global::LightSwitchApplication.sendtypeItem>
                __sendtypeEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.inikierpDataService, global::LightSwitchApplication.sendtypeItem>(
                    "sendtype",
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__sendtype_CanInsert,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__sendtype_CanUpdate,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__sendtype_CanDelete,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__sendtype_CanRead,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__sendtype_Inserting,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__sendtype_Inserted,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__sendtype_Updating,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__sendtype_Updated,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__sendtype_Deleting,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__sendtype_Deleted,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__sendtype_Validate,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__sendtype_Filter);
            private static bool __sendtype_CanInsert(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.sendtype_CanInsert(ref result);
                return result;
            }
            private static bool __sendtype_CanUpdate(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.sendtype_CanUpdate(ref result);
                return result;
            }
            private static bool __sendtype_CanDelete(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.sendtype_CanDelete(ref result);
                return result;
            }
            private static bool __sendtype_CanRead(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.sendtype_CanRead(ref result);
                return result;
            }
            private static void __sendtype_Inserting(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.sendtypeItem e)
            {
                d.sendtype_Inserting(e);
            }
            private static void __sendtype_Inserted(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.sendtypeItem e)
            {
                d.sendtype_Inserted(e);
            }
            private static void __sendtype_Updating(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.sendtypeItem e)
            {
                d.sendtype_Updating(e);
            }
            private static void __sendtype_Updated(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.sendtypeItem e)
            {
                d.sendtype_Updated(e);
            }
            private static void __sendtype_Deleting(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.sendtypeItem e)
            {
                d.sendtype_Deleting(e);
            }
            private static void __sendtype_Deleted(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.sendtypeItem e)
            {
                d.sendtype_Deleted(e);
            }
            private static void __sendtype_Validate(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.sendtypeItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sendtype_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sendtypeItem, bool>> __sendtype_Filter(global::LightSwitchApplication.inikierpDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sendtypeItem, bool>> filter = null;
                d.sendtype_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.inikierpDataService, global::LightSwitchApplication.eorderitemItem>
                __eorderitemEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.inikierpDataService, global::LightSwitchApplication.eorderitemItem>(
                    "eorderitem",
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__eorderitem_CanInsert,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__eorderitem_CanUpdate,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__eorderitem_CanDelete,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__eorderitem_CanRead,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__eorderitem_Inserting,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__eorderitem_Inserted,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__eorderitem_Updating,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__eorderitem_Updated,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__eorderitem_Deleting,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__eorderitem_Deleted,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__eorderitem_Validate,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__eorderitem_Filter);
            private static bool __eorderitem_CanInsert(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.eorderitem_CanInsert(ref result);
                return result;
            }
            private static bool __eorderitem_CanUpdate(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.eorderitem_CanUpdate(ref result);
                return result;
            }
            private static bool __eorderitem_CanDelete(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.eorderitem_CanDelete(ref result);
                return result;
            }
            private static bool __eorderitem_CanRead(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.eorderitem_CanRead(ref result);
                return result;
            }
            private static void __eorderitem_Inserting(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.eorderitemItem e)
            {
                d.eorderitem_Inserting(e);
            }
            private static void __eorderitem_Inserted(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.eorderitemItem e)
            {
                d.eorderitem_Inserted(e);
            }
            private static void __eorderitem_Updating(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.eorderitemItem e)
            {
                d.eorderitem_Updating(e);
            }
            private static void __eorderitem_Updated(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.eorderitemItem e)
            {
                d.eorderitem_Updated(e);
            }
            private static void __eorderitem_Deleting(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.eorderitemItem e)
            {
                d.eorderitem_Deleting(e);
            }
            private static void __eorderitem_Deleted(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.eorderitemItem e)
            {
                d.eorderitem_Deleted(e);
            }
            private static void __eorderitem_Validate(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.eorderitemItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.eorderitem_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.eorderitemItem, bool>> __eorderitem_Filter(global::LightSwitchApplication.inikierpDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.eorderitemItem, bool>> filter = null;
                d.eorderitem_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.inikierpDataService, global::LightSwitchApplication.eorderstatuscodeItem>
                __eorderstatuscodeEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.inikierpDataService, global::LightSwitchApplication.eorderstatuscodeItem>(
                    "eorderstatuscode",
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__eorderstatuscode_CanInsert,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__eorderstatuscode_CanUpdate,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__eorderstatuscode_CanDelete,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__eorderstatuscode_CanRead,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__eorderstatuscode_Inserting,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__eorderstatuscode_Inserted,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__eorderstatuscode_Updating,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__eorderstatuscode_Updated,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__eorderstatuscode_Deleting,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__eorderstatuscode_Deleted,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__eorderstatuscode_Validate,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__eorderstatuscode_Filter);
            private static bool __eorderstatuscode_CanInsert(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.eorderstatuscode_CanInsert(ref result);
                return result;
            }
            private static bool __eorderstatuscode_CanUpdate(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.eorderstatuscode_CanUpdate(ref result);
                return result;
            }
            private static bool __eorderstatuscode_CanDelete(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.eorderstatuscode_CanDelete(ref result);
                return result;
            }
            private static bool __eorderstatuscode_CanRead(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.eorderstatuscode_CanRead(ref result);
                return result;
            }
            private static void __eorderstatuscode_Inserting(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.eorderstatuscodeItem e)
            {
                d.eorderstatuscode_Inserting(e);
            }
            private static void __eorderstatuscode_Inserted(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.eorderstatuscodeItem e)
            {
                d.eorderstatuscode_Inserted(e);
            }
            private static void __eorderstatuscode_Updating(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.eorderstatuscodeItem e)
            {
                d.eorderstatuscode_Updating(e);
            }
            private static void __eorderstatuscode_Updated(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.eorderstatuscodeItem e)
            {
                d.eorderstatuscode_Updated(e);
            }
            private static void __eorderstatuscode_Deleting(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.eorderstatuscodeItem e)
            {
                d.eorderstatuscode_Deleting(e);
            }
            private static void __eorderstatuscode_Deleted(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.eorderstatuscodeItem e)
            {
                d.eorderstatuscode_Deleted(e);
            }
            private static void __eorderstatuscode_Validate(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.eorderstatuscodeItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.eorderstatuscode_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.eorderstatuscodeItem, bool>> __eorderstatuscode_Filter(global::LightSwitchApplication.inikierpDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.eorderstatuscodeItem, bool>> filter = null;
                d.eorderstatuscode_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.inikierpDataService, global::LightSwitchApplication.productclassItem>
                __productclassEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.inikierpDataService, global::LightSwitchApplication.productclassItem>(
                    "productclass",
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__productclass_CanInsert,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__productclass_CanUpdate,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__productclass_CanDelete,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__productclass_CanRead,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__productclass_Inserting,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__productclass_Inserted,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__productclass_Updating,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__productclass_Updated,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__productclass_Deleting,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__productclass_Deleted,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__productclass_Validate,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__productclass_Filter);
            private static bool __productclass_CanInsert(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.productclass_CanInsert(ref result);
                return result;
            }
            private static bool __productclass_CanUpdate(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.productclass_CanUpdate(ref result);
                return result;
            }
            private static bool __productclass_CanDelete(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.productclass_CanDelete(ref result);
                return result;
            }
            private static bool __productclass_CanRead(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.productclass_CanRead(ref result);
                return result;
            }
            private static void __productclass_Inserting(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.productclassItem e)
            {
                d.productclass_Inserting(e);
            }
            private static void __productclass_Inserted(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.productclassItem e)
            {
                d.productclass_Inserted(e);
            }
            private static void __productclass_Updating(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.productclassItem e)
            {
                d.productclass_Updating(e);
            }
            private static void __productclass_Updated(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.productclassItem e)
            {
                d.productclass_Updated(e);
            }
            private static void __productclass_Deleting(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.productclassItem e)
            {
                d.productclass_Deleting(e);
            }
            private static void __productclass_Deleted(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.productclassItem e)
            {
                d.productclass_Deleted(e);
            }
            private static void __productclass_Validate(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.productclassItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.productclass_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.productclassItem, bool>> __productclass_Filter(global::LightSwitchApplication.inikierpDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.productclassItem, bool>> filter = null;
                d.productclass_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.inikierpDataService, global::LightSwitchApplication.productcodeItem>
                __productcodeEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.inikierpDataService, global::LightSwitchApplication.productcodeItem>(
                    "productcode",
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__productcode_CanInsert,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__productcode_CanUpdate,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__productcode_CanDelete,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__productcode_CanRead,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__productcode_Inserting,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__productcode_Inserted,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__productcode_Updating,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__productcode_Updated,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__productcode_Deleting,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__productcode_Deleted,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__productcode_Validate,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__productcode_Filter);
            private static bool __productcode_CanInsert(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.productcode_CanInsert(ref result);
                return result;
            }
            private static bool __productcode_CanUpdate(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.productcode_CanUpdate(ref result);
                return result;
            }
            private static bool __productcode_CanDelete(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.productcode_CanDelete(ref result);
                return result;
            }
            private static bool __productcode_CanRead(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.productcode_CanRead(ref result);
                return result;
            }
            private static void __productcode_Inserting(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.productcodeItem e)
            {
                d.productcode_Inserting(e);
            }
            private static void __productcode_Inserted(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.productcodeItem e)
            {
                d.productcode_Inserted(e);
            }
            private static void __productcode_Updating(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.productcodeItem e)
            {
                d.productcode_Updating(e);
            }
            private static void __productcode_Updated(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.productcodeItem e)
            {
                d.productcode_Updated(e);
            }
            private static void __productcode_Deleting(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.productcodeItem e)
            {
                d.productcode_Deleting(e);
            }
            private static void __productcode_Deleted(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.productcodeItem e)
            {
                d.productcode_Deleted(e);
            }
            private static void __productcode_Validate(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.productcodeItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.productcode_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.productcodeItem, bool>> __productcode_Filter(global::LightSwitchApplication.inikierpDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.productcodeItem, bool>> filter = null;
                d.productcode_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.inikierpDataService, global::LightSwitchApplication.employeecodeItem>
                __employeecodeEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.inikierpDataService, global::LightSwitchApplication.employeecodeItem>(
                    "employeecode",
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__employeecode_CanInsert,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__employeecode_CanUpdate,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__employeecode_CanDelete,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__employeecode_CanRead,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__employeecode_Inserting,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__employeecode_Inserted,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__employeecode_Updating,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__employeecode_Updated,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__employeecode_Deleting,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__employeecode_Deleted,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__employeecode_Validate,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__employeecode_Filter);
            private static bool __employeecode_CanInsert(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.employeecode_CanInsert(ref result);
                return result;
            }
            private static bool __employeecode_CanUpdate(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.employeecode_CanUpdate(ref result);
                return result;
            }
            private static bool __employeecode_CanDelete(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.employeecode_CanDelete(ref result);
                return result;
            }
            private static bool __employeecode_CanRead(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.employeecode_CanRead(ref result);
                return result;
            }
            private static void __employeecode_Inserting(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.employeecodeItem e)
            {
                d.employeecode_Inserting(e);
            }
            private static void __employeecode_Inserted(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.employeecodeItem e)
            {
                d.employeecode_Inserted(e);
            }
            private static void __employeecode_Updating(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.employeecodeItem e)
            {
                d.employeecode_Updating(e);
            }
            private static void __employeecode_Updated(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.employeecodeItem e)
            {
                d.employeecode_Updated(e);
            }
            private static void __employeecode_Deleting(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.employeecodeItem e)
            {
                d.employeecode_Deleting(e);
            }
            private static void __employeecode_Deleted(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.employeecodeItem e)
            {
                d.employeecode_Deleted(e);
            }
            private static void __employeecode_Validate(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.employeecodeItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.employeecode_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.employeecodeItem, bool>> __employeecode_Filter(global::LightSwitchApplication.inikierpDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.employeecodeItem, bool>> filter = null;
                d.employeecode_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.inikierpDataService, global::LightSwitchApplication.invtitlecodeItem>
                __invtitlecodeEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.inikierpDataService, global::LightSwitchApplication.invtitlecodeItem>(
                    "invtitlecode",
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__invtitlecode_CanInsert,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__invtitlecode_CanUpdate,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__invtitlecode_CanDelete,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__invtitlecode_CanRead,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__invtitlecode_Inserting,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__invtitlecode_Inserted,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__invtitlecode_Updating,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__invtitlecode_Updated,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__invtitlecode_Deleting,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__invtitlecode_Deleted,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__invtitlecode_Validate,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__invtitlecode_Filter);
            private static bool __invtitlecode_CanInsert(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.invtitlecode_CanInsert(ref result);
                return result;
            }
            private static bool __invtitlecode_CanUpdate(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.invtitlecode_CanUpdate(ref result);
                return result;
            }
            private static bool __invtitlecode_CanDelete(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.invtitlecode_CanDelete(ref result);
                return result;
            }
            private static bool __invtitlecode_CanRead(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.invtitlecode_CanRead(ref result);
                return result;
            }
            private static void __invtitlecode_Inserting(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.invtitlecodeItem e)
            {
                d.invtitlecode_Inserting(e);
            }
            private static void __invtitlecode_Inserted(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.invtitlecodeItem e)
            {
                d.invtitlecode_Inserted(e);
            }
            private static void __invtitlecode_Updating(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.invtitlecodeItem e)
            {
                d.invtitlecode_Updating(e);
            }
            private static void __invtitlecode_Updated(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.invtitlecodeItem e)
            {
                d.invtitlecode_Updated(e);
            }
            private static void __invtitlecode_Deleting(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.invtitlecodeItem e)
            {
                d.invtitlecode_Deleting(e);
            }
            private static void __invtitlecode_Deleted(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.invtitlecodeItem e)
            {
                d.invtitlecode_Deleted(e);
            }
            private static void __invtitlecode_Validate(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.invtitlecodeItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.invtitlecode_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.invtitlecodeItem, bool>> __invtitlecode_Filter(global::LightSwitchApplication.inikierpDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.invtitlecodeItem, bool>> filter = null;
                d.invtitlecode_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.inikierpDataService, global::LightSwitchApplication.unitcodeItem>
                __unitcodeEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.inikierpDataService, global::LightSwitchApplication.unitcodeItem>(
                    "unitcode",
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__unitcode_CanInsert,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__unitcode_CanUpdate,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__unitcode_CanDelete,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__unitcode_CanRead,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__unitcode_Inserting,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__unitcode_Inserted,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__unitcode_Updating,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__unitcode_Updated,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__unitcode_Deleting,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__unitcode_Deleted,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__unitcode_Validate,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__unitcode_Filter);
            private static bool __unitcode_CanInsert(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.unitcode_CanInsert(ref result);
                return result;
            }
            private static bool __unitcode_CanUpdate(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.unitcode_CanUpdate(ref result);
                return result;
            }
            private static bool __unitcode_CanDelete(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.unitcode_CanDelete(ref result);
                return result;
            }
            private static bool __unitcode_CanRead(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.unitcode_CanRead(ref result);
                return result;
            }
            private static void __unitcode_Inserting(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.unitcodeItem e)
            {
                d.unitcode_Inserting(e);
            }
            private static void __unitcode_Inserted(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.unitcodeItem e)
            {
                d.unitcode_Inserted(e);
            }
            private static void __unitcode_Updating(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.unitcodeItem e)
            {
                d.unitcode_Updating(e);
            }
            private static void __unitcode_Updated(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.unitcodeItem e)
            {
                d.unitcode_Updated(e);
            }
            private static void __unitcode_Deleting(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.unitcodeItem e)
            {
                d.unitcode_Deleting(e);
            }
            private static void __unitcode_Deleted(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.unitcodeItem e)
            {
                d.unitcode_Deleted(e);
            }
            private static void __unitcode_Validate(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.unitcodeItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.unitcode_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.unitcodeItem, bool>> __unitcode_Filter(global::LightSwitchApplication.inikierpDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.unitcodeItem, bool>> filter = null;
                d.unitcode_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.inikierpDataService, global::LightSwitchApplication.punitcodeItem>
                __punitcodeEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.inikierpDataService, global::LightSwitchApplication.punitcodeItem>(
                    "punitcode",
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__punitcode_CanInsert,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__punitcode_CanUpdate,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__punitcode_CanDelete,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__punitcode_CanRead,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__punitcode_Inserting,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__punitcode_Inserted,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__punitcode_Updating,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__punitcode_Updated,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__punitcode_Deleting,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__punitcode_Deleted,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__punitcode_Validate,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__punitcode_Filter);
            private static bool __punitcode_CanInsert(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.punitcode_CanInsert(ref result);
                return result;
            }
            private static bool __punitcode_CanUpdate(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.punitcode_CanUpdate(ref result);
                return result;
            }
            private static bool __punitcode_CanDelete(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.punitcode_CanDelete(ref result);
                return result;
            }
            private static bool __punitcode_CanRead(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.punitcode_CanRead(ref result);
                return result;
            }
            private static void __punitcode_Inserting(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.punitcodeItem e)
            {
                d.punitcode_Inserting(e);
            }
            private static void __punitcode_Inserted(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.punitcodeItem e)
            {
                d.punitcode_Inserted(e);
            }
            private static void __punitcode_Updating(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.punitcodeItem e)
            {
                d.punitcode_Updating(e);
            }
            private static void __punitcode_Updated(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.punitcodeItem e)
            {
                d.punitcode_Updated(e);
            }
            private static void __punitcode_Deleting(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.punitcodeItem e)
            {
                d.punitcode_Deleting(e);
            }
            private static void __punitcode_Deleted(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.punitcodeItem e)
            {
                d.punitcode_Deleted(e);
            }
            private static void __punitcode_Validate(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.punitcodeItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.punitcode_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.punitcodeItem, bool>> __punitcode_Filter(global::LightSwitchApplication.inikierpDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.punitcodeItem, bool>> filter = null;
                d.punitcode_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.inikierpDataService, global::LightSwitchApplication.suppliercodeItem>
                __suppliercodeEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.inikierpDataService, global::LightSwitchApplication.suppliercodeItem>(
                    "suppliercode",
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__suppliercode_CanInsert,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__suppliercode_CanUpdate,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__suppliercode_CanDelete,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__suppliercode_CanRead,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__suppliercode_Inserting,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__suppliercode_Inserted,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__suppliercode_Updating,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__suppliercode_Updated,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__suppliercode_Deleting,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__suppliercode_Deleted,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__suppliercode_Validate,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__suppliercode_Filter);
            private static bool __suppliercode_CanInsert(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.suppliercode_CanInsert(ref result);
                return result;
            }
            private static bool __suppliercode_CanUpdate(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.suppliercode_CanUpdate(ref result);
                return result;
            }
            private static bool __suppliercode_CanDelete(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.suppliercode_CanDelete(ref result);
                return result;
            }
            private static bool __suppliercode_CanRead(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.suppliercode_CanRead(ref result);
                return result;
            }
            private static void __suppliercode_Inserting(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.suppliercodeItem e)
            {
                d.suppliercode_Inserting(e);
            }
            private static void __suppliercode_Inserted(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.suppliercodeItem e)
            {
                d.suppliercode_Inserted(e);
            }
            private static void __suppliercode_Updating(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.suppliercodeItem e)
            {
                d.suppliercode_Updating(e);
            }
            private static void __suppliercode_Updated(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.suppliercodeItem e)
            {
                d.suppliercode_Updated(e);
            }
            private static void __suppliercode_Deleting(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.suppliercodeItem e)
            {
                d.suppliercode_Deleting(e);
            }
            private static void __suppliercode_Deleted(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.suppliercodeItem e)
            {
                d.suppliercode_Deleted(e);
            }
            private static void __suppliercode_Validate(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.suppliercodeItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.suppliercode_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.suppliercodeItem, bool>> __suppliercode_Filter(global::LightSwitchApplication.inikierpDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.suppliercodeItem, bool>> filter = null;
                d.suppliercode_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.inikierpDataService, global::LightSwitchApplication.paywaycodeItem>
                __paywaycodeEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.inikierpDataService, global::LightSwitchApplication.paywaycodeItem>(
                    "paywaycode",
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__paywaycode_CanInsert,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__paywaycode_CanUpdate,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__paywaycode_CanDelete,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__paywaycode_CanRead,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__paywaycode_Inserting,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__paywaycode_Inserted,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__paywaycode_Updating,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__paywaycode_Updated,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__paywaycode_Deleting,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__paywaycode_Deleted,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__paywaycode_Validate,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__paywaycode_Filter);
            private static bool __paywaycode_CanInsert(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.paywaycode_CanInsert(ref result);
                return result;
            }
            private static bool __paywaycode_CanUpdate(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.paywaycode_CanUpdate(ref result);
                return result;
            }
            private static bool __paywaycode_CanDelete(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.paywaycode_CanDelete(ref result);
                return result;
            }
            private static bool __paywaycode_CanRead(global::LightSwitchApplication.inikierpDataService d)
            {
                bool result = true;
                d.paywaycode_CanRead(ref result);
                return result;
            }
            private static void __paywaycode_Inserting(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.paywaycodeItem e)
            {
                d.paywaycode_Inserting(e);
            }
            private static void __paywaycode_Inserted(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.paywaycodeItem e)
            {
                d.paywaycode_Inserted(e);
            }
            private static void __paywaycode_Updating(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.paywaycodeItem e)
            {
                d.paywaycode_Updating(e);
            }
            private static void __paywaycode_Updated(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.paywaycodeItem e)
            {
                d.paywaycode_Updated(e);
            }
            private static void __paywaycode_Deleting(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.paywaycodeItem e)
            {
                d.paywaycode_Deleting(e);
            }
            private static void __paywaycode_Deleted(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.paywaycodeItem e)
            {
                d.paywaycode_Deleted(e);
            }
            private static void __paywaycode_Validate(global::LightSwitchApplication.inikierpDataService d, global::LightSwitchApplication.paywaycodeItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.paywaycode_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.paywaycodeItem, bool>> __paywaycode_Filter(global::LightSwitchApplication.inikierpDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.paywaycodeItem, bool>> filter = null;
                d.paywaycode_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.inikierpDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.inikierpDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.inikierpDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.inikierpDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.inikierpDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.inikierpDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.inikierpDataService, global::LightSwitchApplication.customercodeItem>
                __CustomerQueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.inikierpDataService, global::LightSwitchApplication.customercodeItem>(
                    "CustomerQuery",
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__CustomerQuery_CanExecute,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__CustomerQuery_Executing,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__CustomerQuery_Executed,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__CustomerQuery_Failed,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__CustomerQuery_PreprocessQuery);
            private static bool __CustomerQuery_CanExecute(global::LightSwitchApplication.inikierpDataService d, bool r)
            {
                d.CustomerQuery_CanExecute(ref r);
                return r;
            }
            private static void __CustomerQuery_Executing(global::LightSwitchApplication.inikierpDataService d, object[] args)
            {
                d.CustomerQuery_Executing((string)args[0], (string)args[1], (string)args[2], (global::System.Nullable<short>)args[3]);
            }
            private static void __CustomerQuery_Executed(global::LightSwitchApplication.inikierpDataService d, object[] args)
            {
                d.CustomerQuery_Executed((string)args[0], (string)args[1], (string)args[2], (global::System.Nullable<short>)args[3], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.customercodeItem>)args[4]);
            }
            private static void __CustomerQuery_Failed(global::LightSwitchApplication.inikierpDataService d, object[] args, global::System.Exception ex)
            {
                d.CustomerQuery_ExecuteFailed((string)args[0], (string)args[1], (string)args[2], (global::System.Nullable<short>)args[3], ex);
            }
            private static global::System.Linq.IQueryable __CustomerQuery_PreprocessQuery(global::LightSwitchApplication.inikierpDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.customercodeItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.customercodeItem>)args[4];
                d.CustomerQuery_PreprocessQuery((string)args[0], (string)args[1], (string)args[2], (global::System.Nullable<short>)args[3], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.inikierpDataService, global::LightSwitchApplication.sendrecordItem>
                __SendRecordQueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.inikierpDataService, global::LightSwitchApplication.sendrecordItem>(
                    "SendRecordQuery",
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__SendRecordQuery_CanExecute,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__SendRecordQuery_Executing,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__SendRecordQuery_Executed,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__SendRecordQuery_Failed,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__SendRecordQuery_PreprocessQuery);
            private static bool __SendRecordQuery_CanExecute(global::LightSwitchApplication.inikierpDataService d, bool r)
            {
                d.SendRecordQuery_CanExecute(ref r);
                return r;
            }
            private static void __SendRecordQuery_Executing(global::LightSwitchApplication.inikierpDataService d, object[] args)
            {
                d.SendRecordQuery_Executing((string)args[0], (global::System.Nullable<global::System.DateTime>)args[1]);
            }
            private static void __SendRecordQuery_Executed(global::LightSwitchApplication.inikierpDataService d, object[] args)
            {
                d.SendRecordQuery_Executed((string)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sendrecordItem>)args[2]);
            }
            private static void __SendRecordQuery_Failed(global::LightSwitchApplication.inikierpDataService d, object[] args, global::System.Exception ex)
            {
                d.SendRecordQuery_ExecuteFailed((string)args[0], (global::System.Nullable<global::System.DateTime>)args[1], ex);
            }
            private static global::System.Linq.IQueryable __SendRecordQuery_PreprocessQuery(global::LightSwitchApplication.inikierpDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.sendrecordItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.sendrecordItem>)args[2];
                d.SendRecordQuery_PreprocessQuery((string)args[0], (global::System.Nullable<global::System.DateTime>)args[1], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.inikierpDataService, global::LightSwitchApplication.eorderItem>
                __EorderQueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.inikierpDataService, global::LightSwitchApplication.eorderItem>(
                    "EorderQuery",
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__EorderQuery_CanExecute,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__EorderQuery_Executing,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__EorderQuery_Executed,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__EorderQuery_Failed,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__EorderQuery_PreprocessQuery);
            private static bool __EorderQuery_CanExecute(global::LightSwitchApplication.inikierpDataService d, bool r)
            {
                d.EorderQuery_CanExecute(ref r);
                return r;
            }
            private static void __EorderQuery_Executing(global::LightSwitchApplication.inikierpDataService d, object[] args)
            {
                d.EorderQuery_Executing((string)args[0], (string)args[1], (global::System.Nullable<global::System.DateTime>)args[2], (global::System.Nullable<global::System.DateTime>)args[3], (string)args[4]);
            }
            private static void __EorderQuery_Executed(global::LightSwitchApplication.inikierpDataService d, object[] args)
            {
                d.EorderQuery_Executed((string)args[0], (string)args[1], (global::System.Nullable<global::System.DateTime>)args[2], (global::System.Nullable<global::System.DateTime>)args[3], (string)args[4], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.eorderItem>)args[5]);
            }
            private static void __EorderQuery_Failed(global::LightSwitchApplication.inikierpDataService d, object[] args, global::System.Exception ex)
            {
                d.EorderQuery_ExecuteFailed((string)args[0], (string)args[1], (global::System.Nullable<global::System.DateTime>)args[2], (global::System.Nullable<global::System.DateTime>)args[3], (string)args[4], ex);
            }
            private static global::System.Linq.IQueryable __EorderQuery_PreprocessQuery(global::LightSwitchApplication.inikierpDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.eorderItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.eorderItem>)args[5];
                d.EorderQuery_PreprocessQuery((string)args[0], (string)args[1], (global::System.Nullable<global::System.DateTime>)args[2], (global::System.Nullable<global::System.DateTime>)args[3], (string)args[4], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.inikierpDataService, global::LightSwitchApplication.sendrecordItem>
                __SendRecordForEorderEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.inikierpDataService, global::LightSwitchApplication.sendrecordItem>(
                    "SendRecordForEorder",
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__SendRecordForEorder_CanExecute,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__SendRecordForEorder_Executing,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__SendRecordForEorder_Executed,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__SendRecordForEorder_Failed,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__SendRecordForEorder_PreprocessQuery);
            private static bool __SendRecordForEorder_CanExecute(global::LightSwitchApplication.inikierpDataService d, bool r)
            {
                d.SendRecordForEorder_CanExecute(ref r);
                return r;
            }
            private static void __SendRecordForEorder_Executing(global::LightSwitchApplication.inikierpDataService d, object[] args)
            {
                d.SendRecordForEorder_Executing((global::System.Nullable<long>)args[0]);
            }
            private static void __SendRecordForEorder_Executed(global::LightSwitchApplication.inikierpDataService d, object[] args)
            {
                d.SendRecordForEorder_Executed((global::System.Nullable<long>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sendrecordItem>)args[1]);
            }
            private static void __SendRecordForEorder_Failed(global::LightSwitchApplication.inikierpDataService d, object[] args, global::System.Exception ex)
            {
                d.SendRecordForEorder_ExecuteFailed((global::System.Nullable<long>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __SendRecordForEorder_PreprocessQuery(global::LightSwitchApplication.inikierpDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.sendrecordItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.sendrecordItem>)args[1];
                d.SendRecordForEorder_PreprocessQuery((global::System.Nullable<long>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.inikierpDataService, global::LightSwitchApplication.invtitlecodeItem>
                __invtitlecodeForEorderEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.inikierpDataService, global::LightSwitchApplication.invtitlecodeItem>(
                    "invtitlecodeForEorder",
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__invtitlecodeForEorder_CanExecute,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__invtitlecodeForEorder_Executing,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__invtitlecodeForEorder_Executed,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__invtitlecodeForEorder_Failed,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__invtitlecodeForEorder_PreprocessQuery);
            private static bool __invtitlecodeForEorder_CanExecute(global::LightSwitchApplication.inikierpDataService d, bool r)
            {
                d.invtitlecodeForEorder_CanExecute(ref r);
                return r;
            }
            private static void __invtitlecodeForEorder_Executing(global::LightSwitchApplication.inikierpDataService d, object[] args)
            {
                d.invtitlecodeForEorder_Executing((global::System.Nullable<long>)args[0], (global::System.Nullable<int>)args[1]);
            }
            private static void __invtitlecodeForEorder_Executed(global::LightSwitchApplication.inikierpDataService d, object[] args)
            {
                d.invtitlecodeForEorder_Executed((global::System.Nullable<long>)args[0], (global::System.Nullable<int>)args[1], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.invtitlecodeItem>)args[2]);
            }
            private static void __invtitlecodeForEorder_Failed(global::LightSwitchApplication.inikierpDataService d, object[] args, global::System.Exception ex)
            {
                d.invtitlecodeForEorder_ExecuteFailed((global::System.Nullable<long>)args[0], (global::System.Nullable<int>)args[1], ex);
            }
            private static global::System.Linq.IQueryable __invtitlecodeForEorder_PreprocessQuery(global::LightSwitchApplication.inikierpDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.invtitlecodeItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.invtitlecodeItem>)args[2];
                d.invtitlecodeForEorder_PreprocessQuery((global::System.Nullable<long>)args[0], (global::System.Nullable<int>)args[1], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.inikierpDataService, global::LightSwitchApplication.productcodeItem>
                __ProductCodeQueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.inikierpDataService, global::LightSwitchApplication.productcodeItem>(
                    "ProductCodeQuery",
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__ProductCodeQuery_CanExecute,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__ProductCodeQuery_Executing,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__ProductCodeQuery_Executed,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__ProductCodeQuery_Failed,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__ProductCodeQuery_PreprocessQuery);
            private static bool __ProductCodeQuery_CanExecute(global::LightSwitchApplication.inikierpDataService d, bool r)
            {
                d.ProductCodeQuery_CanExecute(ref r);
                return r;
            }
            private static void __ProductCodeQuery_Executing(global::LightSwitchApplication.inikierpDataService d, object[] args)
            {
                d.ProductCodeQuery_Executing((string)args[0], (string)args[1], (string)args[2]);
            }
            private static void __ProductCodeQuery_Executed(global::LightSwitchApplication.inikierpDataService d, object[] args)
            {
                d.ProductCodeQuery_Executed((string)args[0], (string)args[1], (string)args[2], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.productcodeItem>)args[3]);
            }
            private static void __ProductCodeQuery_Failed(global::LightSwitchApplication.inikierpDataService d, object[] args, global::System.Exception ex)
            {
                d.ProductCodeQuery_ExecuteFailed((string)args[0], (string)args[1], (string)args[2], ex);
            }
            private static global::System.Linq.IQueryable __ProductCodeQuery_PreprocessQuery(global::LightSwitchApplication.inikierpDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.productcodeItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.productcodeItem>)args[3];
                d.ProductCodeQuery_PreprocessQuery((string)args[0], (string)args[1], (string)args[2], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.inikierpDataService, global::LightSwitchApplication.suppliercodeItem>
                __SupplierCodeQueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.inikierpDataService, global::LightSwitchApplication.suppliercodeItem>(
                    "SupplierCodeQuery",
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__SupplierCodeQuery_CanExecute,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__SupplierCodeQuery_Executing,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__SupplierCodeQuery_Executed,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__SupplierCodeQuery_Failed,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__SupplierCodeQuery_PreprocessQuery);
            private static bool __SupplierCodeQuery_CanExecute(global::LightSwitchApplication.inikierpDataService d, bool r)
            {
                d.SupplierCodeQuery_CanExecute(ref r);
                return r;
            }
            private static void __SupplierCodeQuery_Executing(global::LightSwitchApplication.inikierpDataService d, object[] args)
            {
                d.SupplierCodeQuery_Executing((string)args[0], (string)args[1]);
            }
            private static void __SupplierCodeQuery_Executed(global::LightSwitchApplication.inikierpDataService d, object[] args)
            {
                d.SupplierCodeQuery_Executed((string)args[0], (string)args[1], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.suppliercodeItem>)args[2]);
            }
            private static void __SupplierCodeQuery_Failed(global::LightSwitchApplication.inikierpDataService d, object[] args, global::System.Exception ex)
            {
                d.SupplierCodeQuery_ExecuteFailed((string)args[0], (string)args[1], ex);
            }
            private static global::System.Linq.IQueryable __SupplierCodeQuery_PreprocessQuery(global::LightSwitchApplication.inikierpDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.suppliercodeItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.suppliercodeItem>)args[2];
                d.SupplierCodeQuery_PreprocessQuery((string)args[0], (string)args[1], ref query);
                return query;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.inikierpDataService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.inikierpDataService>(
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.inikierpDataService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.inikierpDataService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.inikierpDataService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.inikierpDataService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
        }
    
        #endregion
    }
    
    #endregion
}
